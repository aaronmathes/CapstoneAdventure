
@model Capstone_Xavier.Models.LoginModel

@{
    ViewData["Title"] = "Login";
}


<h2>@ViewData["Title"]</h2>
<br>
<div class="nav-side">
    <div class="dropdown">
        <button onclick="dropDown()" class="dropBtn">More</button>
        <div id="myDropdown" class="dropdown-item">
            <a onclick="location.href='@Url.Action("Index", "Home")'"> Home</a>
            <a onclick="location.href='@Url.Action("Register", "Home")'"> Register</a>
            <a onclick="location.href='@Url.Action("FAQS", "Home")'"> FAQS</a>
            @*<a>@Html.ActionLink("Register", "Register", "Home")</a>
                <a>@Html.ActionLink("Home", "Index", "Home")</a>
                <a href="#">@Html.ActionLink("FAQS", "FAQS", "Home")</a>*@
        </div>
    </div>
</div>
@using (Html.BeginForm("Login", "Home"))
{

    <label for="error" id="error" class="validation">@Model.alertMessage</label>
    <div class="input-list">
        <div class="input">
            <label>Username</label>
            @Html.EditorFor(LoginModel => LoginModel.username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name" } })
            @Html.ValidationMessageFor(LoginModel => LoginModel.username, null, new { @class = "validation" })

        </div>
        <br>
        <div class="input">
            <label>Password</label>
            @Html.EditorFor(LoginModel => LoginModel.password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Enter Password." } })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(LoginModel => LoginModel.password, "", new { @class = "validation" }).ToHtmlString()))
        </div>
    </div>
    <button class="btn-user" type="submit">Submit</button>
    <button class="btn-user" type="reset">Clear</button>

}
