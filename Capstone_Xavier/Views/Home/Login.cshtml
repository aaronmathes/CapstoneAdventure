
@model Capstone_Xavier.Models.LoginModel

@{
    ViewData["Title"] = "Login";
}
<div class="row" style="margin-top: 2%">
    <div class="col-md-4 ml-md-auto d-flex justify-content-center">
        <h3>@ViewData["Title"]</h3>
    </div>
    <div class="col-md-4 " id="menu-button-style">
        <div class="row">
            <div class="row">
                <div class="nav-side" id="user-menu-button" style="margin-top: 3%;">
                    <div class="dropdown">
                        <button onclick="dropDown()" class="dropBtn">More</button>
                        <div id="myDropdown" class="dropdown-item">
                            <a onclick="location.href='@Url.Action("Index", "Home")'"> Home</a>
                            <a onclick="location.href='@Url.Action("Register", "Home")'"> Register</a>
                            <a onclick="location.href='@Url.Action("FAQS", "Home")'"> FAQS</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Login", "Home"))
{
    <div class="row justify-content-center" id="content" >
        <div class="col-5">
            <p for="error" id="error" class="validation">@Model.alertMessage</p>
            <div class="input-list">
                <div class="input">
                    <label>Username</label>
                    <div id="usernamebox">
                        @Html.EditorFor(LoginModel => LoginModel.username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name" } })
                    </div>
                    @Html.ValidationMessageFor(LoginModel => LoginModel.username, null, new { @id = "usernameval", @class = "validation" })

                </div>
                <br>
                <div class="input">
                    <label>Password</label>
                    <div id="passwordbox">
                        @Html.EditorFor(LoginModel => LoginModel.password, new { htmlAttributes = new { @id = "PasswordBox", @class = "form-control", @type = "password", @placeholder = "Enter Password." } })
                    </div>
                    <div class="show-password-group">
                        <input type="checkbox" id="passwordshow" value="show" onclick="ShowPassword('PasswordBox')">
                        <label for="passwordshow" class="show-password-label" @*style="display: inline-block; "*@> Show Password </label> <br />
                    </div>
                    <div class="row" style="margin-left: 0px;">
                        @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(LoginModel => LoginModel.password, "", new { @id = "passwordval", @class = "validation" }).ToHtmlString()))
                    </div>
                   
                </div>
            </div>
            <button class="btn-user" type="submit">Submit</button>
            <button class="btn-user" type="reset" onclick="Clearform()">Clear</button>
        </div>
    </div>
}
<script>
    function Clearform() {
        var username = document.getElementById("usernamebox");
        var usernameval = document.getElementById("usernameval");
        var password = document.getElementById("passwordbox");
        var passwordval = document.getElementById("passwordval");
        var error = document.getElementById("error");
        console.log(username.innerHTML);
        if (username.value != null | username.value != "") {
            username.innerHTML = "<input class='input-validation-error form-control text-box single-line' data-val='true' data-val-maxlength='Username cannot be above 15 characters' data-val-maxlength-max='15' data-val-required='The username field is required.' id='username' name='username' placeholder='Enter First Name' type='text' value=''>";
            usernameval.innerHTML = "";
        }
        if (password.value != null | password.value != "") {
            password.innerHTML = "<input class='input-validation-error form-control text-box single-line' data-val='true' data-val-length='Password must be at least 8 and no more than 20 characters long.' data-val-length-max='20' data-val-length-min='8' data-val-regex='Invalid Password. Passwords must contain: <br> &amp;ensp; • One or more captial letters <br> &amp;ensp; • One or more lower case letters<br> &amp;ensp; • One or more numbers (0-9)<br> &amp;ensp; • One or more special characters (#, ?, !, @@, $, %, ^, &amp;, *, -, +)' data-val-regex-pattern='^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[#@@$%!?^&amp;*\-+]).*$' data-val-required='Password is required.' id='password' name='password' placeholder='Enter Password.' type='password' value=''>";
            passwordval.innerHTML = "";
        }
        error.innerHTML = "";
            //console.log(email.value);
        /*username.*/
        /*username.nodeValue = "";*/
        //var form = document.getElementById("register-form");
        //document.getElementById("register-form").reset();
    }
    function ShowPassword() {
        var show = document.getElementById("PasswordBox")
        if (show.type === "password") {
            show.type = "text";
        } else {
            show.type = "password";
        }
    }
</script>